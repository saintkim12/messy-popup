{"version":3,"file":"messy-popup.es.js","sources":["../src/messy-popup.ts"],"sourcesContent":["import { DefaultPopupConfig, OptionalDefaultPopupConfig, PopupConfig } from './types/PopupConfig'\nimport { PopupHTMLElement } from './types/PopupElement'\nimport { PopupDataInfo, PopupInstance } from './types/PopupInstance'\n\nconst contentAttrName = 'data-messy-content'\n// const vname = 'MessyPopup'\nconst aname = 'messyPopup'\nconst dataDraggableHandle = 'data-messy-draggable-handle'\nconst globalWrapperClassName = 'messy-popup'\nconst defaultZIndex = 1000\n\n// utils\nclass HTMLElementUtil {\n  convertTextToElement(str: string): Element | null {\n    const div = document.createElement('div')\n    div.innerHTML = str\n    return div.firstElementChild\n  }\n  show(el: PopupHTMLElement): PopupHTMLElement {\n    el.style.visibility = ''\n    return el\n  }\n  hide(el: PopupHTMLElement): PopupHTMLElement {\n    el.style.visibility = 'hidden'\n    return el\n  }\n  destroy(el: PopupHTMLElement): PopupHTMLElement {\n    return el.parentNode?.removeChild(el) ?? el\n  }\n  setDraggable(el: PopupHTMLElement, set?: boolean): PopupHTMLElement {\n    const unset = set === false\n    unset ? this.unbindDraggable.call(el, el) : this.bindDraggable.call(el, el)\n    return el\n  }\n\n  // CSS 삽입\n  insertCss(css: string): boolean {\n    // 기존 sheet 사용\n    const sheet: CSSStyleSheet | undefined =\n      Array.from(document.styleSheets).find((sh) => sh.href === null) ||\n      (() => {\n        // 등록가능한 sheet가 없는 경우\n        const style = document.createElement('style')\n        style.setAttribute('data-messy-popup', 'true')\n        document.querySelector('head')?.appendChild(style)\n        return Array.from(document.styleSheets).find((sh) => sh.href === null)\n      })()\n    return sheet ? sheet.insertRule(css, sheet.cssRules.length) >= 0 : false\n  }\n  // draggable 속성 해제\n  unbindDraggable(elmnt: HTMLElement): void {\n    const targetElement: HTMLElement = elmnt.querySelector('[' + dataDraggableHandle + ']') ?? elmnt\n    const handlerisSelf = elmnt === targetElement\n    if (handlerisSelf) {\n      targetElement.removeAttribute(dataDraggableHandle)\n    }\n    targetElement.onmousedown = null\n  }\n  // draggable 속성 연결\n  bindDraggable(elmnt: HTMLElement): void {\n    // from https://www.w3schools.com/howto/howto_js_draggable.asp\n    let pos1 = 0\n    let pos2 = 0\n    let pos3 = 0\n    let pos4 = 0\n\n    const targetElement: HTMLElement = elmnt.querySelector('[' + dataDraggableHandle + ']') ?? elmnt\n    const handlerisSelf = elmnt === targetElement\n    if (handlerisSelf) {\n      targetElement.setAttribute(dataDraggableHandle, '')\n    }\n    targetElement.onmousedown = dragMouseDown\n\n    function dragMouseDown(e: MouseEvent): void {\n      // e = e || window.event;\n      e.preventDefault()\n      // get the mouse cursor position at startup:\n      pos3 = e.clientX\n      pos4 = e.clientY\n      document.onmouseup = closeDragElement\n      // call a function whenever the cursor moves:\n      document.onmousemove = elementDrag\n    }\n\n    function elementDrag(e: MouseEvent): void {\n      // e = e || window.event;\n      e.preventDefault()\n      // calculate the new cursor position:\n      pos1 = pos3 - e.clientX\n      pos2 = pos4 - e.clientY\n      pos3 = e.clientX\n      pos4 = e.clientY\n      // set the element's new position:\n      // convert bottom to top\n      if (elmnt.style.bottom) {\n        elmnt.style.top = elmnt.offsetTop + 'px'\n        elmnt.style.bottom = ''\n      }\n      // convert right to left\n      if (elmnt.style.right) {\n        elmnt.style.left = elmnt.offsetLeft + 'px'\n        elmnt.style.right = ''\n      }\n      elmnt.style.top = elmnt.offsetTop - pos2 + 'px'\n      elmnt.style.left = elmnt.offsetLeft - pos1 + 'px'\n    }\n\n    function closeDragElement(): void {\n      // stop moving when mouse button is released:\n      document.onmouseup = null\n      document.onmousemove = null\n    }\n  }\n}\nclass MessyPopupInstance implements PopupInstance {\n  public popupInfo: PopupDataInfo\n  private _config: DefaultPopupConfig\n  public instanceConfig: DefaultPopupConfig | undefined\n\n  private htmlUtil: HTMLElementUtil\n\n  constructor() {\n    this.htmlUtil = new HTMLElementUtil()\n    this.popupInfo = {}\n    this.instanceConfig = undefined\n    this._config = {\n      root: 'body',\n      wrapper: ((): HTMLElement => document.createElement('div'))(),\n      global: {\n        // hide: true,\n        draggable: false,\n        style: {\n          zIndex: 1000,\n        },\n      },\n    }\n  }\n\n  init(): this {\n    const cssList = [\n      `.${globalWrapperClassName} { background-color: #fff; }`,\n      // `.${globalWrapperClassName} [data-messy-content] { height: 100%; }`,\n      // `.${globalWrapperClassName} [${dataDraggableHandle}] { height: 100%; }`,\n      `[${dataDraggableHandle}] { cursor: move; }`,\n    ]\n    cssList.forEach(this.htmlUtil.insertCss)\n\n    return this\n  }\n\n  addPopupInfo(id: string, el: PopupHTMLElement): void {\n    this.popupInfo[id] = el\n  }\n  removePopupInfo(id: string): void {\n    delete this.popupInfo[id]\n  }\n\n  // setConfig(customConfig: undefined): this\n  // setConfig(customConfig: OptionalDefaultPopupConfig): this\n  setConfig(customConfig: OptionalDefaultPopupConfig): this {\n    const getDefinedValue = <T>(...args: Array<T | undefined>): T | undefined => args.find((arg) => arg !== undefined)\n    // const wrapObj = function(key, value) {\n    //   var _o = {}\n    //   _o[key] = value\n    //   return _o\n    // }\n    // const wrapObj = (k: string, v: any): object => ({ [k]: v })\n    const defaultConfig: DefaultPopupConfig = this._config\n    const currentConfig: DefaultPopupConfig = {\n      root: getDefinedValue(customConfig?.root, defaultConfig.root),\n      wrapper: getDefinedValue(customConfig?.wrapper, defaultConfig.wrapper),\n      global: {\n        draggable: getDefinedValue(customConfig?.global?.draggable, defaultConfig.global.draggable),\n        style: {\n          zIndex: getDefinedValue(customConfig?.global?.style?.zIndex, customConfig?.global?.zIndex /* 설정 alias */, defaultConfig?.global?.style?.zIndex),\n\n          top: getDefinedValue(customConfig?.global?.style?.top, defaultConfig.global.style?.top),\n          left: getDefinedValue(customConfig?.global?.style?.left, defaultConfig.global.style?.left),\n          bottom: getDefinedValue(customConfig?.global?.style?.bottom, defaultConfig.global.style?.bottom),\n          right: getDefinedValue(customConfig?.global?.style?.right, defaultConfig.global.style?.right),\n          position: getDefinedValue(customConfig?.global?.style?.position, defaultConfig.global.style?.position),\n          width: getDefinedValue(customConfig?.global?.style?.width, defaultConfig.global.style?.width),\n          height: getDefinedValue(customConfig?.global?.style?.height, defaultConfig.global.style?.height),\n        },\n      },\n    }\n    this.instanceConfig = currentConfig\n    return this\n  }\n\n  createPopup(...popupConfigList: Array<PopupConfig>): this {\n    const config: DefaultPopupConfig = <DefaultPopupConfig>this.instanceConfig\n    const body: Element = <Element>document.querySelector(config.root ?? '')\n\n    popupConfigList\n      .filter((item) => item.id)\n      .map((item: PopupConfig): [PopupHTMLElement, PopupConfig] => {\n        const { id, wrapper, content, style = {} } = item\n        const { zIndex: globalZIndex } = config.global\n        \n        const div: PopupHTMLElement = <PopupHTMLElement>(((w) => {\n          if (w instanceof HTMLElement) return w\n          else if (typeof w === 'string') return <HTMLElement>this.htmlUtil.convertTextToElement(w)\n          else return <HTMLElement>this._config.wrapper\n        })(wrapper === undefined ? config.wrapper : wrapper)).cloneNode(true)\n        div.id = id\n        div.classList.add(globalWrapperClassName)\n\n        const contentDiv: Element =\n          div.querySelector(`[${contentAttrName}]`) ??\n          (() => {\n            div.setAttribute(contentAttrName, '') /* wrapper 자신을 contentDiv로 지정 */\n            return div\n          })()\n        contentDiv.innerHTML = content\n        div.dataset[aname] = ''\n        // console.log('style', style)\n        // div.dataset[aname + 'Id'] = id\n        div.style.top = style?.top?.toString() || '0'\n        div.style.left = style?.left?.toString() || '0'\n        div.style.bottom = style?.bottom?.toString() || ''\n        div.style.right = style?.right?.toString() || ''\n        div.style.position = style?.position || 'absolute'\n        div.style.zIndex = ((zIndex) => {\n          switch (typeof zIndex) {\n          case 'undefined':\n            return ''\n          case 'number':\n            return `${zIndex}`\n          default:\n            return zIndex\n          }\n        })(style?.zIndex || style?.['z-index'] || globalZIndex) || defaultZIndex\n\n        // FIXME: 테스트, wrapper의 최상위 자식 노드로 고정\n        const child: HTMLElement | null = div.querySelector(`[${contentAttrName}] > *:first-child`)\n        if (child) {\n          child.style.width = style?.width?.toString() || ''\n          child.style.height = style?.height?.toString() || ''\n        }\n\n        // 초기 생성시에는 안보이도록\n        div.style.visibility = 'hidden'\n\n        // 메소드 바인딩\n        div.show = () => this.htmlUtil.show(div)\n        div.hide = () => this.htmlUtil.hide(div)\n        div.destroy = () => {\n          this.removePopupInfo(id)\n          return this.htmlUtil.destroy(div)\n        }\n        div.setDraggable = () => this.htmlUtil.setDraggable(div)\n        div.unsetDraggable = () => this.htmlUtil.setDraggable(div, false)\n\n        this.addPopupInfo(id, div)\n        return [div, item]\n      })\n      .map(([popup, item]: [PopupHTMLElement, PopupConfig]): PopupHTMLElement => {\n        const getBooleanFunctionalValue = (...args: Array<(() => boolean | undefined) | boolean | undefined>) => {\n          for (const arg of args) {\n            const value = typeof arg === 'function' ? arg() : arg\n            if (typeof value === 'boolean') return value\n            // else continue\n          }\n          return\n        }\n        // draggable 세팅: item.draggable > html 속성에 dataDraggableHandle이 있는지 > global draggable\n        const draggable: boolean = getBooleanFunctionalValue(item.draggable, !!popup.querySelector(`[${dataDraggableHandle}]`) || config.global.draggable) ?? false\n        const show: boolean = <boolean>(() => {\n          // 우선도에 따른 조회값(item.show, global.show, !item.hide, !global.hide, true)에 따라 리턴\n          return getBooleanFunctionalValue(\n            item.show,\n            () => (typeof item.hide === 'boolean' ? !item.hide : undefined),\n            config.global.show,\n            () => (typeof config.global.hide === 'boolean' ? !config.global.hide : undefined),\n            true\n          )\n        })()\n\n        body.appendChild(popup)\n        if (draggable) {\n          console.log('popup', popup, draggable, popup.setDraggable)\n          popup.setDraggable()\n        }\n        if (show) popup.show()\n        return popup\n      })\n    return this\n  }\n  getPopup(id: string): PopupHTMLElement {\n    return this.popupInfo[id]\n  }\n  show(id: string): this {\n    const el = this.getPopup(id)\n    el.show()\n    return this\n  }\n  hide(id: string): this {\n    const el = this.getPopup(id)\n    el.hide()\n    return this\n  }\n  destroy(id: string): this {\n    const el = this.getPopup(id)\n    el.destroy()\n    return this\n  }\n  destroyAll(): this {\n    Object.keys(this.popupInfo).forEach(this.destroy)\n    return this\n  }\n  setDraggable(id: string): this {\n    const el = this.getPopup(id)\n    \n    el.setDraggable()\n    return this\n  }\n  unsetDraggable(id: string): this {\n    const el = this.getPopup(id)\n    \n    el.unsetDraggable()\n    return this\n  }\n  unsetDraggableAll(): this {\n    Object.keys(this.popupInfo).forEach(this.unsetDraggable)\n    return this\n  }\n  getPopupCount(): number {\n    return Object.keys(this.popupInfo).length\n  }\n  forEach(fn: ([id, el]: [string, PopupHTMLElement], i: number, arr: Array<[string, PopupHTMLElement]>) => void): this {\n    Object.entries(this.popupInfo).forEach(([id, el]: [string, PopupHTMLElement], i: number, arr: Array<[string, PopupHTMLElement]>) => {\n      // fn.apply(this, [el, id, i, arr])\n      return fn.apply(this, [[id, el], i, arr])\n    })\n    return this\n  }\n  \n  // deprecated\n  // 모듈 방식 변경에 따라 불필요할듯?? \n  // noConflict(w: typeof window): this {\n  //  delete w[vname]\n  noConflict(): this {\n    return this\n  }\n  // config(customConfig: undefined): this\n  // config(customConfig: OptionalDefaultPopupConfig): this\n  config(customConfig: OptionalDefaultPopupConfig): this {\n    return this.setConfig(customConfig)\n  }\n}\nconst _MessyPopup = new MessyPopupInstance()\nconst MessyPopup = _MessyPopup.init()\n\nexport default MessyPopup\n"],"names":["dataDraggableHandle","convertTextToElement","str","div","document","createElement","innerHTML","firstElementChild","show","el","style","visibility","hide","destroy","parentNode","removeChild","setDraggable","set","this","unbindDraggable","call","bindDraggable","insertCss","css","sheet","Array","from","styleSheets","find","sh","href","setAttribute","querySelector","appendChild","insertRule","cssRules","length","elmnt","targetElement","removeAttribute","onmousedown","pos1","pos2","pos3","pos4","e","preventDefault","clientX","clientY","bottom","top","offsetTop","right","left","offsetLeft","onmouseup","onmousemove","closeDragElement","elementDrag","MessyPopup","constructor","htmlUtil","HTMLElementUtil","popupInfo","instanceConfig","_config","root","wrapper","global","draggable","zIndex","init","forEach","addPopupInfo","id","removePopupInfo","setConfig","customConfig","getDefinedValue","args","arg","defaultConfig","currentConfig","position","width","height","createPopup","popupConfigList","config","body","filter","item","map","content","globalZIndex","w","HTMLElement","cloneNode","classList","add","dataset","toString","child","unsetDraggable","popup","getBooleanFunctionalValue","value","log","getPopup","destroyAll","keys","unsetDraggableAll","getPopupCount","Object","fn","entries","i","arr","apply","noConflict"],"mappings":"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"}