{"version":3,"sources":["messy-popup.ts"],"names":[],"mappings":"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","file":"messy-popup.js","sourceRoot":"../src","sourcesContent":["((document: Document | null): void => {\n  if (!document) {\n    // if not browser\n    return\n  }\n  type PopupDataInfo = {\n    [id: string]: MessyPopupHTMLElement\n  }\n  // type MessyPopupConfig = {\n  //   _config: MessyPopupDefaultConfig\n  //   config: Function\n  // }\n  type MessyPopupDefaultConfig = {\n    root: string\n    wrapper: HTMLElement\n    global: MessyPopupDefaultGlobalConfig\n  }\n  type OptionalMessyPopupDefaultConfig = Partial<MessyPopupDefaultConfig>\n  // & {\n  //   root?: string\n  //   wrapper?: HTMLElement\n  //   global?: MessyPopupDefaultGlobalConfig\n  // }\n  // 공통 팝업 설정과 팝업별 설정의 공통값\n  type MessyPopupOverlappedConfig = {\n    draggable: boolean\n    style: MessyPopupStyle\n    show: boolean\n    hide: boolean\n  }\n  type MessyPopupDefaultGlobalConfig = Partial<MessyPopupOverlappedConfig> & {\n    // style.zIndex의 alias(설정시만 사용)\n    zIndex?: string | number\n  }\n\n  type MessyPopupConfig = Partial<MessyPopupOverlappedConfig> & {\n    id: string\n    wrapper?: string\n    content: string\n  }\n\n  type MessyPopupStyle = {\n    top?: string | number\n    left?: string | number\n    bottom?: string | number\n    right?: string | number\n    position?: string\n    zIndex?: string | number\n\n    width?: string | number\n    height?: string | number\n  }\n\n  class MessyPopupHTMLElement extends HTMLElement {\n    show: () => HTMLElement\n    hide: () => HTMLElement\n    destroy: () => HTMLElement\n    setDraggable: () => HTMLElement\n    unsetDraggable: () => HTMLElement\n  }\n\n  //\n  const contentAttrName = 'data-messy-content'\n  const vname = 'MessyPopup'\n  const aname = 'messyPopup'\n  const dataDraggableHandle = 'data-messy-draggable-handle'\n  const globalWrapperClassName = 'messy-popup'\n  const popupInfo: PopupDataInfo = {}\n\n  // CSS 삽입\n  const insertCss = (css: string): boolean => {\n    // 기존 sheet 사용\n    const sheet: CSSStyleSheet =\n      Array.from(document.styleSheets).find((sh) => sh.href === null) ||\n      (() => {\n        // 등록가능한 sheet가 없는 경우\n        const style = document.createElement('style')\n        style.setAttribute('data-messy-popup', 'true')\n        document.querySelector('head').appendChild(style)\n        return Array.from(document.styleSheets).find((sh) => sh.href === null)\n      })()\n    return sheet ? sheet.insertRule(css, sheet.cssRules.length) >= 0 : false\n  }\n  const cssList = [\n    `.${globalWrapperClassName} { background-color: #fff; }`,\n    // `.${globalWrapperClassName} [data-messy-content] { height: 100%; }`,\n  ]\n  cssList.forEach(insertCss)\n\n  // draggable 속성 해제\n  const unbindDraggable = function (elmnt: HTMLElement): void {\n    const targetElement: HTMLElement = elmnt.querySelector('[' + dataDraggableHandle + ']') ?? elmnt\n    targetElement.onmousedown = undefined\n  }\n  // draggable 속성 연결\n  const bindDraggable = function (elmnt: HTMLElement): void {\n\n    // from https://www.w3schools.com/howto/howto_js_draggable.asp\n    let pos1 = 0\n    let pos2 = 0\n    let pos3 = 0\n    let pos4 = 0\n    \n    const targetElement: HTMLElement = elmnt.querySelector('[' + dataDraggableHandle + ']') ?? elmnt\n    targetElement.onmousedown = dragMouseDown\n\n    function dragMouseDown(e: MouseEvent): void {\n      // e = e || window.event;\n      e.preventDefault()\n      // get the mouse cursor position at startup:\n      pos3 = e.clientX\n      pos4 = e.clientY\n      document.onmouseup = closeDragElement\n      // call a function whenever the cursor moves:\n      document.onmousemove = elementDrag\n    }\n\n    function elementDrag(e: MouseEvent): void {\n      // e = e || window.event;\n      e.preventDefault()\n      // calculate the new cursor position:\n      pos1 = pos3 - e.clientX\n      pos2 = pos4 - e.clientY\n      pos3 = e.clientX\n      pos4 = e.clientY\n      // set the element's new position:\n      // convert bottom to top\n      if (elmnt.style.bottom) {\n        elmnt.style.top = elmnt.offsetTop + 'px'\n        elmnt.style.bottom = ''\n      }\n      // convert right to left\n      if (elmnt.style.right) {\n        elmnt.style.left = elmnt.offsetLeft + 'px'\n        elmnt.style.right = ''\n      }\n      elmnt.style.top = elmnt.offsetTop - pos2 + 'px'\n      elmnt.style.left = elmnt.offsetLeft - pos1 + 'px'\n    }\n\n    function closeDragElement(): void {\n      // stop moving when mouse button is released:\n      document.onmouseup = null\n      document.onmousemove = null\n    }\n  }\n\n  // utils\n  const convertTextToElement = function (str: string): Element {\n    const div = document.createElement('div')\n    div.innerHTML = str\n    return div.firstElementChild\n  }\n  const addPopupInfo = function (id: string, el: MessyPopupHTMLElement): void {\n    popupInfo[id] = el\n  }\n  const removePopupInfo = function (id: string): void {\n    delete popupInfo[id]\n  }\n  const show = function (el: MessyPopupHTMLElement): MessyPopupHTMLElement {\n    el.style.visibility = ''\n    return el\n  }\n  const hide = function (el: MessyPopupHTMLElement): MessyPopupHTMLElement {\n    el.style.visibility = 'hidden'\n    return el\n  }\n  const destroy = function (id: string): MessyPopupHTMLElement {\n    const el: MessyPopupHTMLElement = popupInfo[id]\n    removePopupInfo(id)\n    return el.parentNode.removeChild(el)\n  }\n  const setDraggable = function (id: string, set?: boolean): MessyPopupHTMLElement {\n    const unset = set === false\n    const el = popupInfo[id]\n    // if (set) unbindDraggable.call(el)\n    // else bindDraggable.call(el)\n    unset ? unbindDraggable.call(el, el) : bindDraggable.call(el, el)\n    return el\n  }\n\n  const getDefinedValue = <T>(...args: Array<T | undefined>): T | undefined => args.find((arg) => arg !== undefined)\n\n  class _MessyPopup {\n    private _config: MessyPopupDefaultConfig\n    public config: MessyPopupDefaultConfig\n\n    constructor() {\n      this._config = {\n        root: 'body',\n        wrapper: ((): HTMLElement => document.createElement('div'))(),\n        global: {\n          // hide: true,\n          draggable: true,\n          style: {\n            zIndex: 1000,\n          },\n        },\n      }\n    }\n\n    setConfig(customConfig: undefined): this\n    setConfig(customConfig: OptionalMessyPopupDefaultConfig): this\n    setConfig(customConfig: OptionalMessyPopupDefaultConfig): this {\n      // const wrapObj = function(key, value) {\n      //   var _o = {}\n      //   _o[key] = value\n      //   return _o\n      // }\n      // const wrapObj = (k: string, v: any): object => ({ [k]: v })\n      const defaultConfig: MessyPopupDefaultConfig = this._config\n      const currentConfig: MessyPopupDefaultConfig = {\n        root: getDefinedValue(customConfig?.root, defaultConfig.root),\n        wrapper: getDefinedValue(customConfig?.wrapper, defaultConfig.wrapper),\n        global: {\n          draggable: getDefinedValue(customConfig?.global?.draggable, defaultConfig.global.draggable),\n          style: {\n            zIndex: getDefinedValue(customConfig?.global?.style?.zIndex, customConfig?.global?.zIndex /* 설정 alias */, defaultConfig.global.style.zIndex),\n\n            top: getDefinedValue(customConfig?.global?.style?.top, defaultConfig.global.style?.top),\n            left: getDefinedValue(customConfig?.global?.style?.left, defaultConfig.global.style?.left),\n            bottom: getDefinedValue(customConfig?.global?.style?.bottom, defaultConfig.global.style?.bottom),\n            right: getDefinedValue(customConfig?.global?.style?.right, defaultConfig.global.style?.right),\n            position: getDefinedValue(customConfig?.global?.style?.position, defaultConfig.global.style?.position),\n            width: getDefinedValue(customConfig?.global?.style?.width, defaultConfig.global.style?.width),\n            height: getDefinedValue(customConfig?.global?.style?.height, defaultConfig.global.style?.height),\n          },\n        },\n      }\n      this.config = currentConfig\n      return this\n    }\n\n    createPopup(...popupConfigList: Array<MessyPopupConfig>): this {\n      const config: MessyPopupDefaultConfig = this.config\n      const body: Element = document.querySelector(config.root)\n\n      popupConfigList\n        .filter((item) => item.id)\n        .map((item: MessyPopupConfig): [MessyPopupHTMLElement, MessyPopupConfig] => {\n          const { id, wrapper, content, style = {} } = item\n          const { zIndex: globalZIndex } = config.global\n\n          const div: MessyPopupHTMLElement = <MessyPopupHTMLElement>(wrapper === undefined ? config.wrapper : convertTextToElement(wrapper)).cloneNode(true)\n          div.id = id\n          div.classList.add(globalWrapperClassName)\n\n          const contentDiv: Element = div.querySelector(`[${contentAttrName}]`) ?? (() => { div.setAttribute(contentAttrName, ''); return div })()\n          contentDiv.innerHTML = content\n          div.dataset[aname] = ''\n          console.log('style', style)\n          // div.dataset[aname + 'Id'] = id\n          div.style.top = style?.top?.toString() || ''\n          div.style.left = style?.left?.toString() || ''\n          div.style.bottom = style?.bottom?.toString() || ''\n          div.style.right = style?.right?.toString() || ''\n          div.style.position = style?.position || 'absolute'\n          div.style.zIndex = style?.zIndex || style?.['z-index'] || globalZIndex\n\n          // FIXME: 테스트, wrapper의 최상위 자식 노드로 고정\n          const child: HTMLElement = div.querySelector(`[${contentAttrName}] > *:first-child`)\n          if (child) {\n            child.style.width = style?.width?.toString() || ''\n            child.style.height = style?.height?.toString() || ''\n          }\n\n          // 초기 생성시에는 안보이도록\n          div.style.visibility = 'hidden'\n\n          // 메소드 바인딩\n          div.show = () => show(div)\n          div.hide = () => hide(div)\n          div.destroy = () => destroy(id)\n          div.setDraggable = () => setDraggable(id)\n          div.unsetDraggable = () => setDraggable(id, false)\n\n          addPopupInfo(id, div)\n          return [div, item]\n        })\n        .map(([popup, item]: [MessyPopupHTMLElement, MessyPopupConfig]): MessyPopupHTMLElement => {\n          const getBooleanFunctionalValue = (...args: Array<(() => boolean) | boolean>) => {\n            for (const arg of args) {\n              const value = typeof arg === 'function' ? arg() : arg\n              if ([true, false].includes(value)) return value\n              // else continue\n            }\n          }\n          const draggable: boolean = getBooleanFunctionalValue(item.draggable, config.global.draggable)\n          const show: boolean = (() => {\n            // 우선도에 따른 조회값(item.show, global.show, !item.hide, !global.hide, true)에 따라 리턴\n            return getBooleanFunctionalValue(\n              item.show,\n              () => ([true, false].includes(item.hide) ? !item.hide : undefined),\n              config.global.show,\n              () => ([true, false].includes(config.global.hide) ? !config.global.hide : undefined),\n              true\n            )\n          })()\n\n          body.appendChild(popup)\n          if (draggable) popup.setDraggable()\n          if (show) popup.show()\n          return popup\n        })\n      return this\n    }\n    getPopup(id: string): MessyPopupHTMLElement {\n      return popupInfo[id]\n    }\n    show(id: string): this {\n      const el = this.getPopup(id)\n      el.show()\n      return this\n    }\n    hide(id: string): this {\n      const el = this.getPopup(id)\n      el.hide()\n      return this\n    }\n    destroy(id: string): this {\n      const el = this.getPopup(id)\n      el.destroy()\n      return this\n    }\n    destroyAll(): this {\n      Object.keys(popupInfo).forEach(this.destroy)\n      return this\n    }\n    setDraggable(id: string): this {\n      const el = this.getPopup(id)\n      el.setDraggable()\n      return this\n    }\n    unsetDraggable(id: string): this {\n      const el = this.getPopup(id)\n      el.unsetDraggable()\n      return this\n    }\n    unsetDraggableAll(): this {\n      Object.keys(popupInfo).forEach(this.unsetDraggable)\n      return this\n    }\n    getPopupCount(): number {\n      return Object.keys(popupInfo).length\n    }\n    forEach(fn: ([id, el]: [string, MessyPopupHTMLElement], i: number, arr: Array<[string, MessyPopupHTMLElement]>) => void): this {\n      Object.entries(popupInfo).forEach(function ([id, el]: [string, MessyPopupHTMLElement], i: number, arr: Array<[string, MessyPopupHTMLElement]>) {\n        fn.apply(this, [el, id, i, arr])\n      })\n      return this\n    }\n    noConflict(w: typeof globalThis): this {\n      delete w[vname]\n      return this\n    }\n  }\n  const MessyPopup = new _MessyPopup()\n\n  // w && (w[vname] = MessyPopup)\n  if (typeof module === 'undefined') {\n    // global bind\n    // var w = typeof global !== 'undefined' ? global : window\n    const w: typeof globalThis = typeof global !== 'undefined' ? global : window\n    w[vname] = MessyPopup\n  } else {\n    // module.exports bind\n    module.exports = MessyPopup\n    // module.exports.default = MessyPopup\n  }\n})(\n  ((): Document | null => {\n    try {\n      return document\n    } catch (e) {\n      return null\n    }\n  })()\n)\n"]}