{"version":3,"sources":["messy-popup.ts"],"names":[],"mappings":"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","file":"messy-popup.js","sourceRoot":"../src","sourcesContent":["import { PopupConfig, DefaultPopupConfig, OptionalDefaultPopupConfig } from './types/PopupConfig'\nimport { PopupHTMLElement } from './types/PopupElement';\nimport { PopupInstance, PopupDataInfo } from './types/PopupInstance';\n\n;((document: Document | null): void => {\n  if (!document) {\n    // if not browser\n    return\n  }\n\n  //\n  const contentAttrName = 'data-messy-content'\n  const vname = 'MessyPopup'\n  const aname = 'messyPopup'\n  const dataDraggableHandle = 'data-messy-draggable-handle'\n  const globalWrapperClassName = 'messy-popup'\n\n  // utils\n  class HTMLElementUtil {\n    convertTextToElement(str: string): Element {\n      const div = document.createElement('div')\n      div.innerHTML = str\n      return div.firstElementChild\n    }\n    show(el: PopupHTMLElement): PopupHTMLElement {\n      el.style.visibility = ''\n      return el\n    }\n    hide(el: PopupHTMLElement): PopupHTMLElement {\n      el.style.visibility = 'hidden'\n      return el\n    }\n    destroy(el: PopupHTMLElement): PopupHTMLElement {\n      return el.parentNode.removeChild(el)\n    }\n    setDraggable(el: PopupHTMLElement, set?: boolean): PopupHTMLElement {\n      const unset = set === false\n      unset ? this.unbindDraggable.call(el, el) : this.bindDraggable.call(el, el)\n      return el\n    }\n\n    \n    // CSS 삽입\n    insertCss(css: string): boolean {\n      // 기존 sheet 사용\n      const sheet: CSSStyleSheet =\n        Array.from(document.styleSheets).find((sh) => sh.href === null) ||\n        (() => {\n          // 등록가능한 sheet가 없는 경우\n          const style = document.createElement('style')\n          style.setAttribute('data-messy-popup', 'true')\n          document.querySelector('head').appendChild(style)\n          return Array.from(document.styleSheets).find((sh) => sh.href === null)\n        })()\n      return sheet ? sheet.insertRule(css, sheet.cssRules.length) >= 0 : false\n    }\n    // draggable 속성 해제\n    unbindDraggable(elmnt: HTMLElement): void {\n      const targetElement: HTMLElement = elmnt.querySelector('[' + dataDraggableHandle + ']') ?? elmnt\n      targetElement.onmousedown = undefined\n    }\n    // draggable 속성 연결\n    bindDraggable(elmnt: HTMLElement): void {\n\n      // from https://www.w3schools.com/howto/howto_js_draggable.asp\n      let pos1 = 0\n      let pos2 = 0\n      let pos3 = 0\n      let pos4 = 0\n      \n      const targetElement: HTMLElement = elmnt.querySelector('[' + dataDraggableHandle + ']') ?? elmnt\n      targetElement.onmousedown = dragMouseDown\n\n      function dragMouseDown(e: MouseEvent): void {\n        // e = e || window.event;\n        e.preventDefault()\n        // get the mouse cursor position at startup:\n        pos3 = e.clientX\n        pos4 = e.clientY\n        document.onmouseup = closeDragElement\n        // call a function whenever the cursor moves:\n        document.onmousemove = elementDrag\n      }\n\n      function elementDrag(e: MouseEvent): void {\n        // e = e || window.event;\n        e.preventDefault()\n        // calculate the new cursor position:\n        pos1 = pos3 - e.clientX\n        pos2 = pos4 - e.clientY\n        pos3 = e.clientX\n        pos4 = e.clientY\n        // set the element's new position:\n        // convert bottom to top\n        if (elmnt.style.bottom) {\n          elmnt.style.top = elmnt.offsetTop + 'px'\n          elmnt.style.bottom = ''\n        }\n        // convert right to left\n        if (elmnt.style.right) {\n          elmnt.style.left = elmnt.offsetLeft + 'px'\n          elmnt.style.right = ''\n        }\n        elmnt.style.top = elmnt.offsetTop - pos2 + 'px'\n        elmnt.style.left = elmnt.offsetLeft - pos1 + 'px'\n      }\n\n      function closeDragElement(): void {\n        // stop moving when mouse button is released:\n        document.onmouseup = null\n        document.onmousemove = null\n      }\n    }\n  }\n  class MessyPopupInstance implements PopupInstance {\n    public popupInfo: PopupDataInfo\n    private _config: DefaultPopupConfig\n    public instanceConfig: DefaultPopupConfig\n    \n    private htmlUtil: HTMLElementUtil\n\n    constructor() {\n      this.htmlUtil = new HTMLElementUtil()\n      this.popupInfo = {}\n      this._config = {\n        root: 'body',\n        wrapper: ((): HTMLElement => document.createElement('div'))(),\n        global: {\n          // hide: true,\n          draggable: true,\n          style: {\n            zIndex: 1000,\n          },\n        },\n      }\n    }\n\n    init(): this {\n      const cssList = [\n        `.${globalWrapperClassName} { background-color: #fff; }`,\n        // `.${globalWrapperClassName} [data-messy-content] { height: 100%; }`,\n      ]\n      cssList.forEach(this.htmlUtil.insertCss)\n      \n      return this\n    }\n    \n    addPopupInfo(id: string, el: PopupHTMLElement): void {\n      this.popupInfo[id] = el\n    }\n    removePopupInfo(id: string): void {\n      delete this.popupInfo[id]\n    }\n\n    // setConfig(customConfig: undefined): this\n    // setConfig(customConfig: OptionalDefaultPopupConfig): this\n    setConfig(customConfig: OptionalDefaultPopupConfig): this {\n      const getDefinedValue = <T>(...args: Array<T | undefined>): T | undefined => args.find((arg) => arg !== undefined)\n      // const wrapObj = function(key, value) {\n      //   var _o = {}\n      //   _o[key] = value\n      //   return _o\n      // }\n      // const wrapObj = (k: string, v: any): object => ({ [k]: v })\n      const defaultConfig: DefaultPopupConfig = this._config\n      const currentConfig: DefaultPopupConfig = {\n        root: getDefinedValue(customConfig?.root, defaultConfig.root),\n        wrapper: getDefinedValue(customConfig?.wrapper, defaultConfig.wrapper),\n        global: {\n          draggable: getDefinedValue(customConfig?.global?.draggable, defaultConfig.global.draggable),\n          style: {\n            zIndex: getDefinedValue(customConfig?.global?.style?.zIndex, customConfig?.global?.zIndex /* 설정 alias */, defaultConfig.global.style.zIndex),\n\n            top: getDefinedValue(customConfig?.global?.style?.top, defaultConfig.global.style?.top),\n            left: getDefinedValue(customConfig?.global?.style?.left, defaultConfig.global.style?.left),\n            bottom: getDefinedValue(customConfig?.global?.style?.bottom, defaultConfig.global.style?.bottom),\n            right: getDefinedValue(customConfig?.global?.style?.right, defaultConfig.global.style?.right),\n            position: getDefinedValue(customConfig?.global?.style?.position, defaultConfig.global.style?.position),\n            width: getDefinedValue(customConfig?.global?.style?.width, defaultConfig.global.style?.width),\n            height: getDefinedValue(customConfig?.global?.style?.height, defaultConfig.global.style?.height),\n          },\n        },\n      }\n      this.instanceConfig = currentConfig\n      return this\n    }\n\n    createPopup(...popupConfigList: Array<PopupConfig>): this {\n      const config: DefaultPopupConfig = this.instanceConfig\n      const body: Element = document.querySelector(config.root)\n\n      popupConfigList\n        .filter((item) => item.id)\n        .map((item: PopupConfig): [PopupHTMLElement, PopupConfig] => {\n          const { id, wrapper, content, style = {} } = item\n          const { zIndex: globalZIndex } = config.global\n\n          const div: PopupHTMLElement = <PopupHTMLElement>(wrapper === undefined ? config.wrapper : this.htmlUtil.convertTextToElement(wrapper)).cloneNode(true)\n          div.id = id\n          div.classList.add(globalWrapperClassName)\n\n          const contentDiv: Element = div.querySelector(`[${contentAttrName}]`) ?? (() => {\n            div.setAttribute(contentAttrName, '') /* wrapper 자신을 contentDiv로 지정 */\n            return div\n          })()\n          contentDiv.innerHTML = content\n          div.dataset[aname] = ''\n          // console.log('style', style)\n          // div.dataset[aname + 'Id'] = id\n          div.style.top = style?.top?.toString() || ''\n          div.style.left = style?.left?.toString() || ''\n          div.style.bottom = style?.bottom?.toString() || ''\n          div.style.right = style?.right?.toString() || ''\n          div.style.position = style?.position || 'absolute'\n          div.style.zIndex = style?.zIndex || style?.['z-index'] || globalZIndex\n\n          // FIXME: 테스트, wrapper의 최상위 자식 노드로 고정\n          const child: HTMLElement = div.querySelector(`[${contentAttrName}] > *:first-child`)\n          if (child) {\n            child.style.width = style?.width?.toString() || ''\n            child.style.height = style?.height?.toString() || ''\n          }\n\n          // 초기 생성시에는 안보이도록\n          div.style.visibility = 'hidden'\n\n          // 메소드 바인딩\n          div.show = () => this.htmlUtil.show(div)\n          div.hide = () => this.htmlUtil.hide(div)\n          div.destroy = () => {\n            this.removePopupInfo(id)\n            return this.htmlUtil.destroy(div)\n          }\n          div.setDraggable = () => this.htmlUtil.setDraggable(div)\n          div.unsetDraggable = () => this.htmlUtil.setDraggable(div, false)\n\n          this.addPopupInfo(id, div)\n          return [div, item]\n        })\n        .map(([popup, item]: [PopupHTMLElement, PopupConfig]): PopupHTMLElement => {\n          const getBooleanFunctionalValue = (...args: Array<(() => boolean) | boolean>) => {\n            for (const arg of args) {\n              const value = typeof arg === 'function' ? arg() : arg\n              if ([true, false].includes(value)) return value\n              // else continue\n            }\n          }\n          const draggable: boolean = getBooleanFunctionalValue(item.draggable, config.global.draggable)\n          const show: boolean = (() => {\n            // 우선도에 따른 조회값(item.show, global.show, !item.hide, !global.hide, true)에 따라 리턴\n            return getBooleanFunctionalValue(\n              item.show,\n              () => ([true, false].includes(item.hide) ? !item.hide : undefined),\n              config.global.show,\n              () => ([true, false].includes(config.global.hide) ? !config.global.hide : undefined),\n              true\n            )\n          })()\n\n          body.appendChild(popup)\n          if (draggable) popup.setDraggable()\n          if (show) popup.show()\n          return popup\n        })\n      return this\n    }\n    getPopup(id: string): PopupHTMLElement {\n      return this.popupInfo[id]\n    }\n    show(id: string): this {\n      const el = this.getPopup(id)\n      el.show()\n      return this\n    }\n    hide(id: string): this {\n      const el = this.getPopup(id)\n      el.hide()\n      return this\n    }\n    destroy(id: string): this {\n      const el = this.getPopup(id)\n      el.destroy()\n      return this\n    }\n    destroyAll(): this {\n      Object.keys(this.popupInfo).forEach(this.destroy)\n      return this\n    }\n    setDraggable(id: string): this {\n      const el = this.getPopup(id)\n      el.setDraggable()\n      return this\n    }\n    unsetDraggable(id: string): this {\n      const el = this.getPopup(id)\n      el.unsetDraggable()\n      return this\n    }\n    unsetDraggableAll(): this {\n      Object.keys(this.popupInfo).forEach(this.unsetDraggable)\n      return this\n    }\n    getPopupCount(): number {\n      return Object.keys(this.popupInfo).length\n    }\n    forEach(fn: ([id, el]: [string, PopupHTMLElement], i: number, arr: Array<[string, PopupHTMLElement]>) => void): this {\n      Object.entries(this.popupInfo).forEach(function ([id, el]: [string, PopupHTMLElement], i: number, arr: Array<[string, PopupHTMLElement]>) {\n        fn.apply(this, [el, id, i, arr])\n      })\n      return this\n    }\n    noConflict(w: typeof globalThis): this {\n      delete w[vname]\n      return this\n    }\n\n    \n    // deprecated\n    // config(customConfig: undefined): this\n    // config(customConfig: OptionalDefaultPopupConfig): this\n    config(customConfig: OptionalDefaultPopupConfig): this {\n      return this.setConfig(customConfig)\n    }\n  }\n  const MessyPopup = new MessyPopupInstance()\n  MessyPopup.init()\n\n  // w && (w[vname] = MessyPopup)\n  if (typeof module === 'undefined') {\n    // global bind\n    // var w = typeof global !== 'undefined' ? global : window\n    const w: typeof globalThis = typeof global !== 'undefined' ? global : window\n    w[vname] = MessyPopup\n  } else {\n    // module.exports bind\n    module.exports = MessyPopup\n    // module.exports.default = MessyPopup\n  }\n})(\n  ((): Document | null => {\n    try {\n      return document\n    } catch (e) {\n      return null\n    }\n  })()\n)\n"]}